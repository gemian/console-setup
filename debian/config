#!/bin/bash

#     Copyright Â© 2005 Anton Zinoviev <anton@lml.bas.bg>

#     This program is free software; you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation; either version 2 of the License, or
#     (at your option) any later version.

#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.

#     If you have not received a copy of the GNU General Public License
#     along with this program, write to the Free Software Foundation, Inc.,
#     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

set -e

. /usr/share/debconf/confmodule

fontsets='Arabic-Fixed15
Arabic-Fixed16
Arabic-VGA14
Arabic-VGA16
Arabic-VGA8
Armenian-Fixed13
Armenian-Fixed14
Armenian-Fixed15
Armenian-Fixed16
Armenian-Fixed18
CyrAsia-Fixed13
CyrAsia-Fixed14
CyrAsia-Fixed15
CyrAsia-Fixed16
CyrAsia-Fixed18
CyrKoi-Fixed13
CyrKoi-Fixed14
CyrKoi-Fixed15
CyrKoi-Fixed16
CyrKoi-Fixed18
CyrKoi-VGA14
CyrKoi-VGA16
CyrKoi-VGA8
CyrSlav-Fixed13
CyrSlav-Fixed14
CyrSlav-Fixed15
CyrSlav-Fixed16
CyrSlav-Fixed18
CyrSlav-VGA14
CyrSlav-VGA16
CyrSlav-VGA8
Ethiopian-Fixed15
Ethiopian-Fixed18
Georgian-Fixed13
Georgian-Fixed14
Georgian-Fixed15
Georgian-Fixed16
Georgian-Fixed18
Greek-Fixed13
Greek-Fixed14
Greek-Fixed15
Greek-Fixed16
Greek-Fixed18
Greek-VGA14
Greek-VGA16
Greek-VGA8
Hebrew-Fixed13
Hebrew-Fixed14
Hebrew-Fixed15
Hebrew-Fixed16
Hebrew-Fixed18
Hebrew-VGA14
Hebrew-VGA16
Hebrew-VGA8
Lao-Fixed14
Lao-Fixed15
Lao-Fixed16
Lat15-Fixed13
Lat15-Fixed14
Lat15-Fixed15
Lat15-Fixed16
Lat15-Fixed18
Lat15-VGA14
Lat15-VGA16
Lat15-VGA8
Lat2-Fixed13
Lat2-Fixed14
Lat2-Fixed15
Lat2-Fixed16
Lat2-Fixed18
Lat2-VGA14
Lat2-VGA16
Lat2-VGA8
Lat38-Fixed13
Lat38-Fixed14
Lat38-Fixed15
Lat38-Fixed16
Lat38-Fixed18
Lat38-VGA14
Lat38-VGA16
Lat38-VGA8
Lat7-Fixed13
Lat7-Fixed14
Lat7-Fixed15
Lat7-Fixed16
Lat7-Fixed18
Lat7-VGA14
Lat7-VGA16
Lat7-VGA8
Thai-Fixed13
Thai-Fixed14
Thai-Fixed15
Thai-Fixed16
Thai-Fixed18
Uni1-Fixed15
Uni1-Fixed16
Uni1-VGA14
Uni1-VGA16
Uni1-VGA8
Uni2-Fixed13
Uni2-Fixed14
Uni2-Fixed15
Uni2-Fixed16
Uni2-Fixed18
Uni2-VGA14
Uni2-VGA16
Uni2-VGA8
Uni3-Fixed13
Uni3-Fixed14
Uni3-Fixed15
Uni3-Fixed16
Uni3-Fixed18
Vietnamese-Fixed13
Vietnamese-Fixed14
Vietnamese-Fixed15
Vietnamese-Fixed16
Vietnamese-Fixed18
'
# fontsets='Arabic-Fixed15
# Arabic-Fixed16
# Arabic-vga14
# ... 
# Vietnamese-Fixed18
# '

charmaps='ARMSCII-8
CP1251
CP1255
CP1256
GEORGIAN-ACADEMY
GEORGIAN-PS
IBM1133
ISIRI-3342
ISO-8859-10
ISO-8859-11
ISO-8859-13
ISO-8859-14
ISO-8859-15
ISO-8859-16
ISO-8859-1
ISO-8859-2
ISO-8859-3
ISO-8859-4
ISO-8859-5
ISO-8859-6
ISO-8859-7
ISO-8859-8
ISO-8859-9
KOI8-R
KOI8-U
TIS-620
VISCII
UTF-8
'
# charmaps='ARMSCII-8
# CP1251
# CP1255
# ...
# UTF-8'

kbdnames='model*logicdp*Logitech Cordless Desktop Pro
model*omnikey101*Northgate OmniKey 101
model*abnt2*Brazilian ABNT2
model*pc101*Generic 101-key PC
model*logicdo*Logitech Cordless Desktop Optical
model*hp5181*Hewlett-Packard 5181 Internet Keyboard
model*microsoftprose*Microsoft Internet Keyboard Pro, Swedish
model*itouch*Logitech iTouch
model*yahoo*Yahoo! Internet Keyboard
model*hpzt11xx*Hewlett-Packard Pavilion ZT11xx
model*hpxe4xxx*Hewlett-Packard Omnibook XE4xxx and ZE4xxx
model*dell101*Dell 101-key PC
model*mx2500*Memorex MX2500 EZ-Access Keyboard
model*pc98*PC-98xx Series
model*hp2505*Hewlett-Packard SK-2505 Internet Keyboard
model*logicdpa*Logitech Cordless Desktop Pro (alternate option)
model*hp5xx*Hewlett-Packard Omnibook 5xx
model*dell*Dell
model*powerpcps2*powerpcps2    -  No decription
model*microsoftinet*Microsoft Internet Keyboard
model*ipaq*Compaq iPaq Keyboard
model*samsung4500*Samsung SDM 4500P
model*logiik*Logitech Internet Keyboard
model*sk1300*SK-1300
model*cherryblue*Cherry Blue Line CyBo@rd
model*chicony*Chicony Internet Keyboard
model*mx2750*Memorex MX2750
model*compaqik13*Compaq Internet Keyboard (13 keys)
model*scorpius*Advance Scorpius KI
model*compaqik18*Compaq Internet Keyboard (18 keys)
model*brother*Brother Internet Keyboard
model*propeller*Propeller Voyager (KTEZ-1000)
model*acpi*ACPI Standard
model*pc105*Generic 105-key (Intl) PC
model*hp500fa*Hewlett-Packard Omnibook 500 FA
model*symplon*Symplon PaceBook (tablet PC)
model*microsoft*Microsoft Natural
model*logidak*Logitech Deluxe Access Keyboard
model*ltcd*Logitech Cordless Desktop
model*rapidaccess2a*IBM Rapid Access II (alternate option)
model*qtronix*QTronix Scorpius 98N+
model*logiitc*Logitech iTouch Cordless Keyboard (model Y-RB6)
model*ennyah_dkb1008*Ennyah DKB-1008
model*pc102*Generic 102-key (Intl) PC
model*sk6200*SK-6200
model*hp2501*Hewlett-Packard SK-2501 Multimedia Keyboard
model*hpxt1000*Hewlett-Packard Omnibook XT1000
model*everex*Everex STEPnote
model*compaqik7*Compaq Internet Keyboard (7 keys)
model*winbook*Winbook Model XP5
model*diamond*Diamond 9801 / 9802 series
model*logicdn*Logitech Cordless Desktop Navigator
model*samsung4510*Samsung SDM 4510P
model*pc104*Generic 104-key PC
model*rapidaccess2*IBM Rapid Access II
model*armada*Laptop/notebook Compaq (eg. Armada, Evo) Laptop Keyboard
model*presario*Laptop/notebook Compaq (eg. Presario) Internet Keyboard
model*logicdpa2*Logitech Cordless Desktop Pro (alternate option2)
model*itouchin*Logitech iTouch keyboard Internet Navigator
model*microsoftoffice*Microsoft Office Keyboard
model*hpxe3gc*Hewlett-Packard Omnibook XE3 GC, GD, GE and Pavilion N5xxx
model*honeywell_euroboard*Honeywell Euroboard
model*logicfn*Logitech Cordless Freedom/Desktop Navigator
model*trustda*Trust Direct Access Keyboard
model*dexxa*Dexxa Wireless Desktop Keyboard
model*genius*Genius Comfy KB-16M / Genius MM Keyboard KWD-910
model*btc5126t*BTC 5126T
model*rapidaccess*IBM Rapid Access
model*jp106*Japanese 106-key
model*chicony9885*Chicony KB-9885
model*toshiba_s3000*Toshiba Satellite S3000
model*airkey*Acer AirKey V
model*sk2500*SK-2500
model*macintosh_old*macintosh_old -  No decription
model*hpxe3gf*Hewlett-Packard Omnibook XE3 GF
model*trust*Trust Wireless Keyboard Classic
model*mx1998*Memorex MX1998
model*sk7100*SK-7100
model*btc9000a*BTC 9000A
model*btc5113rf*BTC 5113RF Multimedia
model*microsoftpro*Microsoft Natural Keyboard Pro / Microsoft Internet Keyboard Pro
model*btc9000*BTC 9000
model*cherrybluea*Cherry Blue Line CyBo@rd (alternate option)
model*logicdit*Logitech Cordless Desktop iTouch
model*hpi6*Hewlett-Packard Internet Keyboard
model*inspiron*Laptop/notebook Dell Inspiron 8xxx
model*oretec*Oretec MCK-800 MM/Internet keyboard
model*macintosh*macintosh     -  No decription
model*sven*SVEN Ergonomic 2500
model*compaqeak8*Compaq Easy Access Keyboard
model*flexpro*Keytronic FlexPro
model*logiink*Logitech Internet Navigator Keyboard
layout*sapmi*sapmi         -  No decription
variant*sapmi**sapmi         -  No decription
variant*sapmi*nodeadkeys*Eliminate dead keys
variant*sapmi*basic*sapmi(basic) -  No decription
variant*sapmi*sefi*sapmi(sefi) -  No decription
layout*pl2*Polish (qwertz)
variant*pl2**Polish (qwertz)
layout*fr*French
variant*fr**French
variant*fr*Sundeadkeys*fr(Sundeadkeys) -  No decription
variant*fr*nodeadkeys*Eliminate dead keys
layout*el*Greek
variant*el**Greek
variant*el*extended*el(extended) -  No decription
variant*el*nodeadkeys*Eliminate dead keys
variant*el*polytonic*el(polytonic) -  No decription
layout*kan*Kannada
variant*kan**Kannada
layout*ca*Canadian
variant*ca**Canadian
variant*ca*fr*French
variant*ca*multi*Multilingual
variant*ca*multi-2gr*Multilingual, second part
variant*ca*fr-legacy*French (legacy)
layout*nec/jp*PC-98xx Series
variant*nec/jp**PC-98xx Series
layout*syr*Syriac
variant*syr**Syriac
layout*ben*Bengali
variant*ben**Bengali
layout*de*German
variant*de**German
variant*de*nodeadkeys*Eliminate dead keys
variant*de*deadgraveacute*de(deadgraveacute) -  No decription
variant*de*basic*de(basic) -  No decription
variant*de*deadacute*de(deadacute) -  No decription
layout*ro*Romanian
variant*ro**Romanian
variant*ro*ro_us*US keyboard with Romanian letters
layout*mt*Maltese
variant*mt**Maltese
layout*il*Israeli
variant*il**Israeli
variant*il*si1452*il(si1452) -  No decription
variant*il*lyx*il(lyx) -  No decription
layout*se_SE*Northern Saami (Sweden)
variant*se_SE**Northern Saami (Sweden)
layout*ie*Irish
variant*ie**Irish
variant*ie*CloGaelach*ie(CloGaelach) -  No decription
variant*ie*CloGaelachLaptop*ie(CloGaelachLaptop) -  No decription
variant*ie*laptop*ie(laptop) -  No decription
variant*ie*UnicodeExpert*ie(UnicodeExpert) -  No decription
layout*th_pat*Thai (Pattachote)
variant*th_pat**Thai (Pattachote)
layout*se_NO*Northern Saami (Norway)
variant*se_NO**Northern Saami (Norway)
layout*la*Latin America
variant*la**Latin America
variant*la*nodeadkeys*Eliminate dead keys
variant*la*Sundeadkeys*la(Sundeadkeys) -  No decription
layout*mm*Burmese
variant*mm**Burmese
layout*fr-latin9*French (alternative)
variant*fr-latin9**French (alternative)
variant*fr-latin9*nodeadkeys*Eliminate dead keys
variant*fr-latin9*Sundeadkeys*fr-latin9(Sundeadkeys) -  No decription
layout*vn*Vietnamese
variant*vn**Vietnamese
layout*us_intl*U.S. English w/ deadkeys
variant*us_intl**U.S. English w/ deadkeys
layout*th*Thai (Kedmanee)
variant*th**Thai (Kedmanee)
layout*pl*Polish
variant*pl**Polish
layout*ru_yawerty*Russian (cyrillic phonetic)
variant*ru_yawerty**Russian (cyrillic phonetic)
layout*hr*Croatian
variant*hr**Croatian
variant*hr*us*US keyboard with Croatian letters
layout*tj*Tajik
variant*tj**Tajik
layout*tr*Turkish 
variant*tr**Turkish 
variant*tr*tr_f*Turkish (F)
layout*am*Armenian
variant*am**Armenian
layout*hu*Hungarian
variant*hu**Hungarian
variant*hu*101_qwerty_comma_dead*101/qwerty/comma/Dead keys
variant*hu*102_qwerty_dot_dead*102/qwerty/dot/Dead keys
variant*hu*101_qwertz_dot_dead*101/qwertz/dot/Dead keys
variant*hu*101_qwertz_comma_dead*101/qwertz/comma/Dead keys
variant*hu*101_qwertz_dot_nodead*101/qwertz/dot/Eliminate dead keys
variant*hu*101_qwerty_comma_nodead*101/qwerty/comma/Eliminate dead keys
variant*hu*101_qwerty_dot_dead*101/qwerty/dot/Dead keys
variant*hu*101_qwertz_comma_nodead*101/qwertz/comma/Eliminate dead keys
variant*hu*nodeadkeys*Eliminate dead keys
variant*hu*102_qwertz_dot_nodead*102/qwertz/dot/Eliminate dead keys
variant*hu*102_qwerty_dot_nodead*102/qwerty/dot/Eliminate dead keys
variant*hu*102_qwerty_comma_nodead*102/qwerty/comma/Eliminate dead keys
variant*hu*102_qwerty_comma_dead*102/qwerty/comma/Dead keys
variant*hu*standard*Standard
variant*hu*102_qwertz_comma_nodead*102/qwertz/comma/Eliminate dead keys
variant*hu*101_qwerty_dot_nodead*101/qwerty/dot/Eliminate dead keys
variant*hu*102_qwertz_dot_dead*102/qwertz/dot/Dead keys
variant*hu*qwerty*qwerty
variant*hu*102_qwertz_comma_dead*102/qwertz/comma/Dead keys
layout*cz*Czech
variant*cz**Czech
variant*cz*bksl*cz(bksl) -  No decription
variant*cz*basic*cz(basic) -  No decription
layout*al*Albanian
variant*al**Albanian
layout*mk*Macedonian
variant*mk**Macedonian
variant*mk*pc104*mk(pc104) -  No decription
layout*bg*Bulgarian
variant*bg**Bulgarian
variant*bg*phonetic*bg(phonetic) -  No decription
layout*yu*Yugoslavian
variant*yu**Yugoslavian
layout*lo*Lao
variant*lo**Lao
layout*lv*Latvian
variant*lv**Latvian
layout*dvorak*Dvorak
variant*dvorak**Dvorak
variant*dvorak*sv*dvorak(sv) -  No decription
variant*dvorak*se*dvorak(se) -  No decription
variant*dvorak*no*dvorak(no) -  No decription
layout*ru*Russian
variant*ru**Russian
variant*ru*phonetic*ru(phonetic) -  No decription
variant*ru*winkeys*ru(winkeys) -  No decription
variant*ru*typewriter*ru(typewriter) -  No decription
layout*gur*Gurmukhi
variant*gur**Gurmukhi
layout*no*Norwegian
variant*no**Norwegian
variant*no*basic*no(basic) -  No decription
variant*no*nodeadkeys*Eliminate dead keys
layout*gb*United Kingdom
variant*gb**United Kingdom
layout*lt_std*Lithuanian azerty standard
variant*lt_std**Lithuanian azerty standard
variant*lt_std*nodeadkeys*Eliminate dead keys
variant*lt_std*Sundeadkeys*lt_std(Sundeadkeys) -  No decription
layout*lt*Lithuanian qwerty "numeric"
variant*lt**Lithuanian qwerty "numeric"
variant*lt*lt_us*lt(lt_us) -  No decription
variant*lt*lt_std*lt(lt_std) -  No decription
layout*ml*Malayalam
variant*ml**Malayalam
layout*pt*Portuguese
variant*pt**Portuguese
variant*pt*Sundeadkeys*pt(Sundeadkeys) -  No decription
variant*pt*nodeadkeys*Eliminate dead keys
layout*dev*Hindi
variant*dev**Hindi
layout*ir*Iranian
variant*ir**Iranian
layout*se*Swedish
variant*se**Swedish
variant*se*nodeadkeys*Eliminate dead keys
variant*se*basic*se(basic) -  No decription
layout*ar*Arabic
variant*ar**Arabic
variant*ar*azerty*ar(azerty) -  No decription
variant*ar*qwerty_digits*ar(qwerty_digits) -  No decription
variant*ar*azerty_digits*ar(azerty_digits) -  No decription
variant*ar*qwerty*ar(qwerty) -  No decription
variant*ar*digits*ar(digits) -  No decription
layout*az*Azerbaijani
variant*az**Azerbaijani
variant*az*latin*az(latin) -  No decription
variant*az*cyrillic*az(cyrillic) -  No decription
layout*dk*Danish
variant*dk**Danish
variant*dk*nodeadkeys*Eliminate dead keys
layout*ch*Swiss
variant*ch**Swiss
variant*ch*fr_sundeadkeys*French, Sun dead keys
variant*ch*de*German
variant*ch*fr*French
variant*ch*fr_nodeadkeys*French, eliminate dead keys
variant*ch*de_sundeadkeys*German, Sun dead keys
variant*ch*de_nodeadkeys*German, eliminate dead keys
layout*be*Belgian
variant*be**Belgian
variant*be*nodeadkeys*Eliminate dead keys
variant*be*Sundeadkeys*be(Sundeadkeys) -  No decription
variant*be*iso-alternate*be(iso-alternate) -  No decription
layout*ee*Estonian
variant*ee**Estonian
variant*ee*nodeadkeys*Eliminate dead keys
layout*sk*Slovak
variant*sk**Slovak
variant*sk*basic*sk(basic) -  No decription
variant*sk*bksl*sk(bksl) -  No decription
layout*sk_qwerty*Slovak (qwerty)
variant*sk_qwerty**Slovak (qwerty)
variant*sk_qwerty*basic*sk_qwerty(basic) -  No decription
variant*sk_qwerty*bksl*sk_qwerty(bksl) -  No decription
layout*tel*Telugu
variant*tel**Telugu
layout*br*Brazilian
variant*br**Brazilian
variant*br*nodeadkeys*Eliminate dead keys
variant*br*abnt2*br(abnt2) -  No decription
layout*mn*Mongolian
variant*mn**Mongolian
layout*si*Slovenian
variant*si**Slovenian
layout*ge_ru*Georgian (russian)
variant*ge_ru**Georgian (russian)
layout*ogham*Ogham
variant*ogham**Ogham
variant*ogham*IS434laptop*ogham(IS434laptop) -  No decription
variant*ogham*IS434*ogham(IS434) -  No decription
variant*ogham*laptop*ogham(laptop) -  No decription
layout*en_US*U.S. English w/ ISO9995-3
variant*en_US**U.S. English w/ ISO9995-3
variant*en_US*nodeadkeys*Eliminate dead keys
layout*es*Spanish
variant*es**Spanish
variant*es*nodeadkeys*Eliminate dead keys
variant*es*Sundeadkeys*es(Sundeadkeys) -  No decription
layout*guj*Gujarati
variant*guj**Gujarati
layout*jp*Japanese
variant*jp**Japanese
layout*is*Icelandic
variant*is**Icelandic
variant*is*nodeadkeys*Eliminate dead keys
variant*is*Sundeadkeys*is(Sundeadkeys) -  No decription
layout*bs*Bosnian
variant*bs**Bosnian
layout*fi*Finnish
variant*fi**Finnish
variant*fi*basic*fi(basic) -  No decription
layout*iu*Inuktitut
variant*iu**Inuktitut
layout*tml*Tamil
variant*tml**Tamil
variant*tml*UNI*A Tamil typewrite-style keymap; Unicode encoding
variant*tml*TAB*A Tamil typewrite-style keymap; TAB encoding
variant*tml*INSCRIPT*INSCRIPT layout
variant*tml*TSCII*A Tamil typewrite-style keymap; TSCII encoding
layout*nl*Dutch
variant*nl**Dutch
layout*cz_qwerty*Czech (qwerty)
variant*cz_qwerty**Czech (qwerty)
variant*cz_qwerty*basic*cz_qwerty(basic) -  No decription
variant*cz_qwerty*bksl*cz_qwerty(bksl) -  No decription
layout*th_tis*Thai (TIS-820.2538)
variant*th_tis**Thai (TIS-820.2538)
layout*il_phonetic*Israeli (phonetic)
variant*il_phonetic**Israeli (phonetic)
layout*ori*Oriya
variant*ori**Oriya
layout*ua*Ukrainian 
variant*ua**Ukrainian 
variant*ua*winkeys*ua(winkeys) -  No decription
variant*ua*typewriter*ua(typewriter) -  No decription
variant*ua*phonetic*ua(phonetic) -  No decription
layout*by*Belarusian
variant*by**Belarusian
variant*by*winkeys*by(winkeys) -  No decription
layout*mt_us*Maltese (US layout)
variant*mt_us**Maltese (US layout)
layout*sr*Serbian
variant*sr**Serbian
layout*us*U.S. English
variant*us**U.S. English
layout*se_FI*Northern Saami (Finland)
variant*se_FI**Northern Saami (Finland)
layout*ge_la*Georgian (latin)
variant*ge_la**Georgian (latin)
layout*it*Italian
variant*it**Italian
variant*it*nodeadkeys*Eliminate dead keys
'
# kbdnames='model*logicdp*Logitech Cordless Desktop Pro
# model*omnikey101*Northgate OmniKey 101
# model*abnt2*Brazilian ABNT2
# ...
# variant*it*nodeadkeys*Eliminate dead keys'

db_capb backup

ask_debconf () {
    local template priority prefix default_code default_description choices

    template=$1     # The template to ask
    priority=$2     # The priority for the question
    prefix=$3       # The prefix for $kbdnames
    default_code=$4 # The default choice (optional)

    echo ask_debconf $1 $2 $3 $4 >>/tmp/log

    choices=`echo "$kbdnames" | grep "^$prefix\*" | 
        sed -e "s/^$prefix\*[^\*]*\*//" -e 's/,//g' -e 's/$/,/' | sort `
    choices=`echo $choices | sed 's/, *$//'`

    echo choices=$choices >>/tmp/log

    echo Doing db_subst >>/tmp/log
    db_subst $template CHOICES "$choices"
    if [ -n "$default_code" ]; then
	default_description=`echo "$kbdnames" |  
            grep "^$prefix\*${default_code}\*" |
            sed -e "s/^$prefix\*${default_code}\*//"`
	echo default_description=$default_description >>/tmp/log
	if [ -n "$default_description" ]; then
	    echo Do db_set >>/tmp/log
	    db_set $template "$default_description"
	fi
    fi

    echo Doing db_input >>/tmp/log
    db_input $priority $template || true
    echo Doing db_go >>/tmp/log
    db_go || return 255
    echo Doing db_get >>/tmp/log
    db_get $template
    echo Done >>/tmp/log
    RET=`echo "$kbdnames" | grep "^$prefix\*[^\*]*\*" |
             sed 's/  */ /g' |
             grep "\*$RET\$" |
             sed -e "s/^$prefix\*\([^\*]*\)\*.*/\1/" `
    echo RET=$RET >>/tmp/log
    return 0
}

# The guess arch code is taken from "console-data.conf"
# (translated from Perl to shell)
# TODO: use archdetect instead.

# SUBARCH	KEYMAP SET	DETECTION
# m68k/atari	atari		"Model: Atari"
# m68k/amiga	amiga		"Model: Amiga"
# m68k/mac	mac		"Model: Macintosh"
# m68k/mvme	pc		"Model: Motorola"
# m68k/bvme	pc		"Model: BVME[46]000"
# m68k/{sun,apollo,next,q40,hp300} Not supported by Debian

# ppc/apus	amiga		"machine: Amiga"
# ppc/chrp	pc,mac		"machine: CHRP"
# ppc/pmac	mac		"machine: PowerMac|[Pp]ower[Bb]ook*|Power|iMac*|PowerMac1*"
# ppc/prep	pc		"machine: PReP"
# ppc/{bbox,mbx,ppc64,82xx,8xx} Not yet supported by Debian

# arm/*		pc		(refered to as 'arm' only)

guess_arch () {
    local arch subarch line

    arch=`dpkg --print-installation-architecture`
    
    if [ "$arch" = 'powerpc' -o "$arch" = 'm68k' ]; then
	if [ "$arch" = powerpc ]; then
	    line = `sed -n 's/^machine.*: *//p' /proc/cpuinfo`
	    if [ "$line" = '' ]; then
		echo unknown
		return 0
	    fi
	    subarch=`echo $line|tr A-Z a-z`
	elif [ "$arch" = m68k ]; then
	    line=`sed -n 's/^Model.*: *//p' /proc/hardware`
	    if [ "$line" = '' ]; then
		echo unknown
		return 0
	    fi
	    subarch=`echo $line|tr A-Z a-z`
	fi
	case "$subarch" in
	    *amiga*)
		subarch=amiga
		;;
	    *chrp*)
		subarch=chrp
		;;
	    *prep*)
		subarch=prep
		;;
	    *macintosh*|*powermac*|*powerbook*|*power*|*imac*|*powermac1*)
		subarch=mac
		;;
	    *atari*)
		subarch=atari
		;;
	    *motorola*)
		subarch=mvme
		;;
	    *bvme*)
		subarch=bvme
		;;
	    *)
		subarch=`echo $subarch|sed  's/^\s*//'`
		;;
	esac
	arch="$arch/$subarch"
    fi
    echo $arch
    return 0
}

available_fontfaces () {
    echo codeset=$codeset >>/tmp/log
    echo "$fontsets" | sort | \
	grep "^$codeset-" | \
	sed -e "s/^$codeset-//" -e 's/[0-9]*$//' | \
	uniq
}

available_fontsizes () {
    echo "$fontsets" | sort | \
	grep "^$codeset-$fontface" | \
	sed -e "s/^$codeset-$fontface//" | \
	uniq
}

eval `locale`            # TODO: d-i

locale=$LC_CTYPE

case "$locale" in
    aa_*)
	codeset=Lat15
	codeset_priority=low
	;;
    af_*)
	codeset=Lat15
	codeset_priority=low
	;;
    am_*)
	codeset=Ethiopic
	codeset_priority=low
	;;
    an_*)
	codeset=Lat15
	codeset_priority=low
	;;
    ar_*)
	codeset=Arabic
	codeset_priority=low
	;;
    ar_*)
	codeset=Lat15
	codeset_priority=low
	;;
    az_*)
	codeset=Uni3
	codeset_priority=low
	;;
    be_*)
	codeset=CyrSlav
	codeset_priority=low
	;;
    bg_*)
	codeset=CyrSlav
	codeset_priority=low
	;;
    bn_*)
	codeset=unsupported
	codeset_priority=low
	;;
    br_*)
	codeset=Lat15
	codeset_priority=low
	;;
    bs_*)
	codeset=Uni3
	codeset_priority=low
	;;
    byn_*)
	codeset=Ethiopian
	codeset_priority=low
	;;
    ca_*)
	codeset=Lat15
	codeset_priority=low
	;;
    cs_*)
	codeset=Lat2
	codeset_priority=low
	;;
    cy_*)
	codeset=Lat38
	codeset_priority=low
	;;
    da_*)
	codeset=Lat15
	codeset_priority=low
	;;
    de_*)
	codeset=Lat15
	codeset_priority=low
	;;
    el_*)
	codeset=Greek
	codeset_priority=low
	;;
    en_*)
	codeset=Lat15
	codeset_priority=low
	;;
    eo_*)
	codeset=Lat38
	codeset_priority=low
	;;
    es_*)
	codeset=Lat15
	codeset_priority=low
	;;
    et_*)
	codeset=Lat15
	codeset_priority=low
	;;
    eu_*)
	codeset=Lat15
	codeset_priority=low
	;;
    fa_*)
	codeset=Arabic
	codeset_priority=low
	;;
    fi_*)
	codeset=Lat15
	codeset_priority=low
	;;
    fo_*)
	codeset=Lat15
	codeset_priority=low
	;;
    fr_*)
	codeset=Lat15
	codeset_priority=low
	;;
    ga_*)
	codeset=Lat38
	codeset_priority=low
	;;
    gd_*)
	codeset=Lat15
	codeset_priority=low
	;;
    gez_*)
	codeset=Ethiopian
	codeset_priority=low
	;;
    gl_*)
	codeset=Lat15
	codeset_priority=low
	;;
    gu_*)
	codeset=unsupported
	codeset_priority=low
	;;
    gv_*)
	codeset=Lat15
	codeset_priority=low
	;;
    he_*)
	codeset=Hebrew
	codeset_priority=low
	;;
    hi_*)
	codeset=unsupported
	codeset_priority=low
	;;
    hr_*)
	codeset=Lat2
	codeset_priority=low
	;;
    hu_*)
	codeset=Lat2
	codeset_priority=low
	;;
    hy_*)
	codeset=Armenian
	codeset_priority=low
	;;
    id_*)
	codeset=Lat15
	codeset_priority=low
	;;
    is_*)
	codeset=Lat15
	codeset_priority=low
	;;
    it_*)
	codeset=Lat15
	codeset_priority=low
	;;
    iw_*)
	codeset=Hebrew
	codeset_priority=low
	;;
    ja_*)
	codeset=unsupported
	codeset_priority=low
	;;
    ka_*)
	codeset=Georgian
	codeset_priority=low
	;;
    kl_*)
	codeset=Lat15
	codeset_priority=low
	;;
    kn_*)
	codeset=unsupported
	codeset_priority=low
	;;
    ko_*)
	codeset=unsupported
	codeset_priority=low
	;;
    kw_*)
	codeset=Lat15
	codeset_priority=low
	;;
    lg_*)
	codeset=Lat15 # TODO: This must be ISO-8859-10 (Latin6)
	codeset_priority=low
	;;
    lo_*)
	codeset=Lao
	codeset_priority=low
	;;
    lt_*)
	codeset=Lat7
	codeset_priority=low
	;;
    lv_*)
	codeset=Lat7
	codeset_priority=low
	;;
    mi_*)
	codeset=Lat7
	codeset_priority=low
	;;
    mk_*)
	codeset=CyrSlav
	codeset_priority=low
	;;
    ml_*)
	codeset=unsupported
	codeset_priority=low
	;;
    mn_*)
	codeset=CyrAsia
	codeset_priority=low
	;;
    mr_*)
	codeset=unsupported
	codeset_priority=low
	;;
    ms_*)
	codeset=Lat15 # TODO: Is this correct? (Malay language)
	codeset_priority=low
	;;
    mt_*)
	codeset=Lat38
	codeset_priority=low
	;;
    nb_*)
	codeset=Lat15
	codeset_priority=low
	;;
    ne_*)
	codeset=unsupported
	codeset_priority=low
	;;
    nl_*)
	codeset=Lat15
	codeset_priority=low
	;;
    nn_*)
	codeset=Lat15
	codeset_priority=low
	;;
    oc_*)
	codeset=Lat15
	codeset_priority=low
	;;
    om_*)
	codeset=Lat15
	codeset_priority=low
	;;
    pa_*)
	codeset=unsupported
	codeset_priority=low
	;;
    pl_*)
	codeset=Lat2
	codeset_priority=low
	;;
    pt_*)
	codeset=Lat15
	codeset_priority=low
	;;
    ro_*)
	codeset=Lat2
	codeset_priority=low
	;;
    ru_*)
	codeset=CyrKoi
	codeset_priority=low
	;;
    ru_*)
	codeset=CyrKoi
	codeset_priority=low
	;;
    se_*)
	codeset=Uni1
	codeset_priority=low
	;;
    sid_*)
	codeset=Lat15 # TODO: Is this correct? (Sidama language)
	codeset_priority=low
	;;
    sk_*)
	codeset=Lat2
	codeset_priority=low
	;;
    sl_*)
	codeset=Lat2
	codeset_priority=low
	;;
    so_*)
	codeset=Lat15
	codeset_priority=low
	;;
    sq_*)
	codeset=Lat15
	codeset_priority=low
	;;
    sr_*)
	codeset=CyrSlav
	codeset_priority=low
	;;
    st_*)
	codeset=Lat15 # TODO: Is this correct? (Sotho language)
	codeset_priority=low
	;;
    sv_*)
	codeset=Lat15
	codeset_priority=low
	;;
    ta_*)
	codeset=unsupported
	codeset_priority=low
	;;
    te_*)
	codeset=unsupported
	codeset_priority=low
	;;
    tg_*)
	codeset=CyrAsia
	codeset_priority=low
	;;
    th_*)
	codeset=Thai
	codeset_priority=low
	;;
    ti_*)
	codeset=Ethiopian
	codeset_priority=low
	;;
    tig_*)
	codeset=Ethiopian
	codeset_priority=low
	;;
    tl_*)
	codeset=Lat15
	codeset_priority=low
	;;
    tr_*)
	codeset=Lat15
	codeset_priority=low
	;;
    tt_*)
	codeset=Lat15 # TODO: Is this correct? (Tatar language)
	codeset_priority=low
	;;
    uk_*)
	codeset=CyrSlav
	codeset_priority=low
	;;
    ur_*)
	codeset=Arabic
	codeset_priority=low
	;;
    uz_*)
	codeset=Lat15 # TODO: Is this correct? (Uzbek language)
	codeset_priority=low
	;;
    uz_*\@cyrillic)
	codeset=CyrAsia
	codeset_priority=low
	;;
    vi_*)
	codeset=Vietnamese
	codeset_priority=low
	;;
    wa_*)
	codeset=Lat15
	codeset_priority=low
	;;
    xh_*)
	codeset=Lat15
	codeset_priority=low
	;;
    yi_*)
	codeset=Hebrew
	codeset_priority=low
	;;
    zh_*)
	codeset=unsupported
	codeset_priority=low
	;;
    zu_*)
	codeset=Lat15
	codeset_priority=low
	;;
    *)
	codeset=Uni1
	codeset_priority=medium
	;;
esac

charmap=`locale charmap` # TODO: d-i
if echo "$charmaps" | grep "$charmap" >/dev/null; then
    charmap_priority=low
else
    charmap=UTF-8
    charmap_priority=medium
fi


arch=`guess_arch`

case "$arch" in
    i386)
	default_model=pc105
	model_priority=medium
	;;
    sparc)
	default_model=sun4 # also sun5, pc105
	model_priority=critical
	;;
    alpha)
	default_model=pc105
	model_priority=medium
	;;
    arm)
	default_model=pc105
	model_priority=medium
	;;
    arm/riscpc)
	default_model=pc105
	model_priority=medium
	;;
    mips)
	default_model=pc105
	model_priority=medium
	;;
    m68k/atari)
	default_model=ataritt
	model_priority=medium
	;;
    m68k/amiga)
	default_model=amiga
	model_priority=medium
	;;
    m68k/mac)
	default_model=macintosh_old
	model_priority=medium
	;;
    m68k/mvme)
	default_model=pc105
	model_priority=medium
	;;
    m68k/bvme)
	default_model=pc105
	model_priority=medium
	;;
    powerpc/amiga)
	default_model=amiga # apus
	model_priority=medium
	;;
    powerpc/chrp)
	default_model=pc105 # also macintosh_old
	model_priority=critical
	;;
    powerpc/mac)
	default_model=pc105
	model_priority=medium
	;;
    powerpc/prep)
	default_model=pc105
	model_priority=medium
	;;
    amd64)
	default_model=pc105
	model_priority=medium
	;;
    *)
	default_model=pc105
	model_priority=critical
	;;
esac    

STATE=1
while :; do
    echo ENTERING STATE $STATE >>/tmp/log
    case "$STATE" in
	1)
	    if \
		ask_debconf console-setup/model $model_priority \
		    model $default_model
	    then
		db_set console-setup/modelcode "$RET"
		STATE=$(($STATE + 1))
	    else
		STATE=$(($STATE - 1))
	    fi
	    ;;
	2)
	    if ask_debconf console-setup/layout critical layout; then
		layout="$RET"
		case "$layout" in
		    # TODO: make s.t. to not forget to update this list
		    am|ar|ben|bg|by|dev|el|ge_la|ge_ru|guj|gur|il|il_phonetic|ir|iu|kan|lo|mk|mm|ml|ori|ru|syr|syr_phonetic|tel|th|tj|tml|ua)
			latin=no
			real_layout=us,$layout
			;;
		    sr)
			latin=no
			real_layout=yu,sr
			;;
		    *)
			latin=yes
			real_layout=$layout
			;;
		esac
		db_set console-setup/layoutcode "$real_layout"
		STATE=$(($STATE + 1))
	    else
		STATE=$(($STATE - 1))
	    fi
	    ;;
	3)
	    if \
		ask_debconf console-setup/variant medium \
		    "variant\*${layout}" ''
	    then
		if [ "$latin" = yes ]; then
		    db_set console-setup/variantcode "$RET"
		else
		    db_set console-setup/variantcode ",$RET"
		fi
		STATE=$(($STATE + 1))
	    else
		STATE=$(($STATE - 1))
	    fi
	    ;;
	4)
	    # add commas
	    choices=`echo "$charmaps" | sed -e 's/$/,/g' | sort `
	    # remove newlines
	    choices=`echo $choices | sed -e 's/,$//' `
	    db_subst console-setup/charmap CHOICES "$choices"
	    db_set console-setup/charmap "$charmap"
	    db_input $charmap_priority console-setup/charmap || true
	    if db_go; then
		STATE=$(($STATE + 1))
	    else
		STATE=$(($STATE - 1))
	    fi
	    db_get console-setup/charmap
	    charmap=$RET
	    ;;
	5)
	    db_set console-setup/codeset "$codeset"
	    db_input $codeset_priority console-setup/codeset || true
	    if db_go; then
		STATE=$(($STATE + 1))
	    else
		STATE=$(($STATE - 1))
	    fi
	    db_get console-setup/codeset
	    codeset=$RET
	    ;;
	6)
	    fontfaces=`available_fontfaces`
	    echo fontfaces=$fontfaces >>/tmp/log
	    # add commas
	    choices=`echo "$fontfaces" | sed -e 's/$/,/g'`
	    echo choices1=$choices >>/tmp/log
	    # remove newlines
	    choices=`echo $choices | sed -e 's/,$//'`
	    echo choices2=$choices >>/tmp/log
	    db_subst console-setup/fontface CHOICES "$choices"
	    db_input medium console-setup/fontface || true
	    if db_go; then
		STATE=$(($STATE + 1))
	    else
		STATE=$(($STATE - 1))
	    fi
	    db_get console-setup/fontface
	    fontface=$RET
	    ;;
	7)
	    fontsizes=`available_fontsizes`
	    # add commas
	    choices=`echo "$fontsizes" | sed -e 's/$/,/g' `
	    # remove newlines
	    choices=`echo $choices | sed -e 's/,$//'`
	    db_subst console-setup/fontsize CHOICES "$choices"
	    db_input medium console-setup/fontsize || true
	    if db_go; then
		STATE=$(($STATE + 1))
	    else
		STATE=$(($STATE - 1))
	    fi
	    db_get console-setup/fontsize
	    fontsize=$RET
	    ;;
	8)
	    db_input medium console-setup/ttys || true
	    if db_go; then
		STATE=$(($STATE + 1))
	    else
		STATE=$(($STATE - 1))
	    fi
	    db_get console-setup/ttys
	    ttys=$RET
	    ;;
	*)
	    break
	    ;;
    esac
done

if [ $STATE -eq 1 ]; then
    exit 10
fi
