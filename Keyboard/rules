// $Xorg: xfree86,v 1.3 2000/08/17 19:54:42 cpqbld Exp $

//
//  Rules for resolving XKB components for use with XFree86
//  Copyright 1996 by Joseph Moss
//
//  2002 Modifier: Ivan Pascal      The XFree86 Project
//  $XFree86: xc/programs/xkbcomp/rules/xfree86,v 3.63 2003/05/29 12:41:57 pascal Exp $
//

// Layouts that still need be composed by old rules
! $oldlayouts = az bs ca_enhanced czsk de_CH fr_CH hr_US hu_US hu_qwerty lt_a lt_p lt_std ro2 ru_yawerty se_FI se_NO se_SE tr_f

// If you want non-latin layouts implicitly include the en_US layout
// uncomment lines below
//! $nonlatin = am ar ben bg by dev el ge_la ge_ru guj gur il il_phonetic\
//              ir iu kan lo mk mm ml ori ru sr syr syr_phonetic tel th\
//              tj tml ua

! $pcmodels = pc101 pc102 pc104 pc105
! $mac = macintosh macintosh_old

// ADDITIONS

! $maclayouts = de de_CH dk es fi fr fr_CH gb it nl no pt se us

! model 	=	keycodes
  amiga		=	amiga(de)
  ataritt	=	ataritt(de)
  sun4		=	sun(type4_euro)
  sun5		=	sun(type5_euro)

! model		layout	variant	=	symbols
 ataritt	hr	us	=	xfree68/ataritt+hr_US
 amiga		hr	us	=	xfree68/amiga+hr_US
 sun4		hr	us	=	sun/us(sun4)+iso9995-3(basic)+hr_US
 sun5		hr	us	=	sun/us(sun5)+iso9995-3(basic)+hr_US
 macintosh_old	hr	us	=	macintosh/us(extended)+hr_US
 *		hr	us	=       en_US(pc105)+hr_US

! model		layout		=	symbols
 ataritt	$oldlayouts	=	xfree68/ataritt+%l%(v)
 ataritt	$nonlatin	=	xfree68/ataritt+pc/%l%(v):2
 ataritt	ca		=	xfree68/ataritt+pc/ca(multi)+pc/ca(multi-2gr):2+group(rctrl_switch)
 ataritt	jp		=	xfree68/ataritt+pc/jp(latin)+pc/jp:2
 ataritt	*		=	xfree68/ataritt+pc/%l%(v)
 amiga		$oldlayouts	=	xfree68/amiga+%l%(v)
 amiga		$nonlatin	=	xfree68/amiga+pc/%l%(v):2
 amiga		ca		=	xfree68/amiga+pc/ca(multi)+pc/ca(multi-2gr):2+group(rctrl_switch)
 amiga		jp		=	xfree68/amiga+pc/jp(latin)+pc/jp:2
 amiga		*		=	xfree68/amiga+pc/%l%(v)
 sun4		$oldlayouts	=	sun/us(sun4)+iso9995-3(basic)+%l%(v)
 sun4		$nonlatin	=	sun/us(sun4)+iso9995-3(basic)+pc/%l%(v):2
 sun4		ca		=	sun/us(sun4)+iso9995-3(basic)+pc/ca(multi)+pc/ca(multi-2gr):2+group(rctrl_switch)
 sun4		jp		=	sun/us(sun4)+iso9995-3(basic)+pc/jp(latin)+pc/jp:2
 sun4		*		=	sun/us(sun4)+iso9995-3(basic)+pc/%l%(v)
 sun5		$oldlayouts	=	sun/us(sun5)+iso9995-3(basic)+%l%(v)
 sun5		$nonlatin	=	sun/us(sun5)+iso9995-3(basic)+pc/%l%(v):2
 sun5		ca		=	sun/us(sun5)+iso9995-3(basic)+pc/ca(multi)+pc/ca(multi-2gr):2+group(rctrl_switch)
 sun5		jp		=	sun/us(sun5)+iso9995-3(basic)+pc/jp(latin)+pc/jp:2
 sun5		*		=	sun/us(sun5)+iso9995-3(basic)+pc/%l%(v)

 macintosh_old	$oldlayouts	=	macintosh/us(extended)+%l%(v)
 macintosh_old	$nonlatin	=	macintosh/us(extended)+pc/%l%(v):2
 macintosh_old	ca		=	macintosh/us(extended)+pc/ca(multi)+pc/ca(multi-2gr):2+group(rctrl_switch)
 macintosh_old	jp		=	macintosh/us(extended)+pc/jp(latin)+pc/jp:2
 macintosh_old	*		=	macintosh/us(extended)+pc/%l%(v)

// END ADDITIONS

! model 	=	keycodes
  macintosh_old	=	macintosh
  powerpcps2	=	powerpcps2
  pc98		=	xfree98(pc98)
  abnt2		=	xfree86(abnt2)
  *		=	xfree86

! $azerty = be fr fr-latin9
! $qwertz = al cz de hr pl2 ro si sk 

! layout[1]	=	keycodes
  $azerty       =       +aliases(azerty)
  $qwertz       =       +aliases(qwertz)
  *             =       +aliases(qwerty)

! layout	=	keycodes
  $azerty       =       +aliases(azerty)
  $qwertz       =       +aliases(qwertz)
  *             =       +aliases(qwerty)

! model 	=	geometry
  microsoft	=	microsoft(natural)
  microsoftpro	=	microsoft(natural)
  microsoftprose =	microsoft(natural)
  dell101	=	dell(dell101)
  flexpro	=	keytronic(FlexPro)
  omnikey101	=	northgate(omnikey101)
 $pcmodels	=	pc(%m)
  jp106		=	pc(jp106)
  everex	=	everex(STEPnote)
  winbook	=	winbook(XP5)
  pc98		=	nec(pc98)
  abnt2		=	pc
  macintosh	=	macintosh(macintosh)
  macintosh_old	=	macintosh(macintosh)
  *		=       pc(pc104)

! model		variant		layout	=	symbols
  macintosh	nodeadkeys	*	=	macintosh/us(extended)+macintosh/%l%(v)
 $pcmodels	nodeadkeys  $oldlayouts	=	en_US(%m%_v)+%l%(v)
  *		nodeadkeys  $oldlayouts	=	en_US(pc105%_v)+%l%(v)

! model		layout	=	symbols
  pc98		nec/jp	=	nec/jp(pc98)
  abnt2		br	=	us(pc101)+br
 $mac		us	=	macintosh/us(extended)
 $mac		en_US	=	macintosh/us(extended)
 $mac		*	=	macintosh/us(extended)+macintosh/%l%(v)
 $pcmodels      intl    =       us(%mcompose)
  *		intl	=	us(pc104compose) 
 $pcmodels $oldlayouts  =       en_US(%m)+%l%(v)
 $pcmodels $nonlatin	=	pc/pc(%m)+pc/us+pc/%l%(v):2
 $pcmodels      ca	=	pc/pc(%m)+pc/ca(multi)+pc/ca(multi-2gr):2+group(rctrl_switch)
 $pcmodels      jp	=	pc/pc(pc102)+pc/jp(latin)+pc/jp:2
 $pcmodels	*	=	pc/pc(%m)+pc/%l%(v)
  *	   $oldlayouts  =       en_US(pc105)+%l%(v)
  *	   $nonlatin	=	pc/pc(pc105)+pc/us+pc/%l%(v):2
  *		ca	=	pc/pc(pc105)+pc/ca(multi)+pc/ca(multi-2gr):2+group(rctrl_switch)
  *		jp	=	pc/pc(pc102)+pc/jp(latin)+pc/jp:2
  *		*	=	pc/pc(pc105)+pc/%l%(v)

! model	    layout[1]	=	symbols
 $pcmodels	*	=	pc/pc(%m)+pc/%l[1]%(v[1])
  *		*	=	pc/pc(pc105)+pc/%l[1]%(v[1])

! layout[2]	=	symbols
  mk		=	+pc/%l[2]:2
  *		=	+pc/%l[2]%(v[2]):2

! layout[3]	=	symbols
  *		=	+pc/%l[3]%(v[3]):3

! layout[4]	=	symbols
  *		=	+pc/%l[4]%(v[4]):4
 
! $inetkbds = airkey acpi scorpius \
              brother \
              btc5113rf btc5126t btc9000 btc9000a \
              cherryblue cherrybluea \
              chicony chicony9885 \
              compaqeak8 compaqik7 compaqik13 compaqik18 armada presario ipaq \
              dell inspiron \
              dexxa diamond genius \
              ennyah_dkb1008 \
              hpi6 hp2501 hp2505 hp5181 hpxe3gc hpxe3gf hpxe4xxx hpzt11xx \
              hp500fa hp5xx \
              honeywell_euroboard \
              rapidaccess rapidaccess2 rapidaccess2a \
              ltcd logicdit logicdp logicdpa logicdpa2 logicdo logicfn \
              logicdn logidak logiik itouch logiitc logiik logiink itouchin \
              mx1998 mx2500 mx2750 \
              microsoftinet microsoftpro microsoftprose microsoftoffice \
              oretec \
              propeller \
              qtronix \
              samsung4500 samsung4510 \
              sk1300 sk2500 sk6200 sk7100 \
              sven symplon toshiba_s3000 trust trustda yahoo

! model         =       symbols
  $inetkbds     =       +inet(%m)

! model		layout	=	compat
  pc98		nec/jp	=	pc98(basic)
  *		*	=	complete

! model	     layout[1]	=	compat
  *		*	=	complete

! model		=	types
  *		=	complete

! option		=	symbols
  grp:switch		=	+group(switch)
  grp:lswitch		=	+group(lswitch)
  grp:win_switch	=	+group(win_switch)
  grp:lwin_switch	=	+group(lwin_switch)
  grp:rwin_switch	=	+group(rwin_switch)
  grp:toggle		=	+group(toggle)
  grp:shift_toggle	=	+group(shift_toggle)
  grp:ctrls_toggle	=	+group(ctrls_toggle)
  grp:alts_toggle	=	+group(alts_toggle)
  grp:ctrl_shift_toggle	=	+group(ctrl_shift_toggle)
  grp:caps_toggle	=	+group(caps_toggle)
  grp:ctrl_alt_toggle	=	+group(ctrl_alt_toggle)
  grp:alt_shift_toggle	=	+group(alt_shift_toggle)
  grp:menu_toggle	=	+group(menu_toggle)
  grp:lwin_toggle	=	+group(lwin_toggle)
  grp:rwin_toggle	=	+group(rwin_toggle)
  grp:sclk_toggle	=	+group(sclk_toggle)
  grp:lshift_toggle	=	+group(lshift_toggle)
  grp:rshift_toggle	=	+group(rshift_toggle)
  grp:lctrl_toggle	=	+group(lctrl_toggle)
  grp:rctrl_toggle	=	+group(rctrl_toggle)
  grp:lalt_toggle	=	+group(lalt_toggle)
  ctrl:nocaps		=	+ctrl(nocaps)
  ctrl:swapcaps		=	+ctrl(swapcaps)
  ctrl:ctrl_ac		=	+ctrl(ctrl_ac)
  ctrl:ctrl_aa		=	+ctrl(ctrl_aa)
  altwin:menu		=	+altwin(menu)
  altwin:meta_alt	=	+altwin(meta_alt)
  altwin:meta_win	=	+altwin(meta_win)
  altwin:left_meta_win	=	+altwin(left_meta_win)
  altwin:super_win	=	+altwin(super_win)
  altwin:hyper_win	=	+altwin(hyper_win)
  lv3:switch		=	+level3(switch)
  lv3:menu_switch	=	+level3(menu_switch)
  lv3:win_switch	=	+level3(win_switch)
  lv3:lwin_switch	=	+level3(lwin_switch)
  lv3:rwin_switch	=	+level3(rwin_switch)
  lv3:ralt_switch	=	+level3(ralt_switch)
  lv3:ralt_switch_multikey =	+level3(ralt_switch_multikey)
  compose:ralt		=	+compose(ralt)
  compose:rwin		=	+compose(rwin)
  compose:menu		=	+compose(menu)
  compose:caps		=	+compose(caps)

! option		=	compat
  grp_led:num		=	+leds(num)
  grp_led:caps		=	+leds(caps)
  grp_led:scroll	=	+leds(scroll)

! option			=	types
  caps:internal			=	+caps(internal)
  caps:internal_nocancel	=	+caps(internal_nocancel)
  caps:shift			=	+caps(shift)
  caps:shift_nocancel		=	+caps(shift_nocancel)
